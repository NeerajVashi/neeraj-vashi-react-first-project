{"ast":null,"code":"var _jsxFileName = \"/home/ethen/Desktop/09-neeraj-vashistha-redux-project/src/books/UpdateBook.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateBook } from '../actions/libraryAction';\n\nclass UpdateBook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.change = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      id: props.location.state.currentData.id,\n      author: props.location.state.currentData.author,\n      authorId: props.location.state.currentData.authorId,\n      bookName: props.location.state.currentData.bookName,\n      content: props.location.state.currentData.content,\n      images: props.location.state.currentData.images,\n      isbn: props.location.state.currentData.isbn\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const newData = this.state;\n    const newbookData = {};\n    Object.keys(newData).forEach(keys => {\n      if (newData[keys] !== '') {\n        newbookData[keys] = newData[keys];\n      }\n    });\n    const id = this.state.id;\n    const books = this.props.library.books;\n    const currentBooks = JSON.parse(JSON.stringify(books));\n    const updatedBooks = updateBook(id, newbookData, currentBooks);\n    this.props.dispatch({\n      type: 'changeBooks',\n      payload: updatedBooks\n    });\n    alert('Successfully Updated');\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"container mt-4\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"id\",\n      placeholder: \"Enter bookid\",\n      value: this.state.id,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"author\",\n      placeholder: \"Enter Author Name\",\n      value: this.state.author,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"authorId\",\n      placeholder: \"Enter Author Id\",\n      value: this.state.authorId,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"content\",\n      placeholder: \"Enter Content\",\n      value: this.state.content,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"bookName\",\n      placeholder: \"Enter book Name\",\n      value: this.state.bookName,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"images\",\n      placeholder: \"Enter image\",\n      value: this.state.images,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"isbn\",\n      placeholder: \"Enter ISBN number\",\n      value: this.state.isbn,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    library: state.library\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateBook);","map":{"version":3,"sources":["/home/ethen/Desktop/09-neeraj-vashistha-redux-project/src/books/UpdateBook.js"],"names":["React","Component","connect","updateBook","UpdateBook","constructor","props","change","e","setState","target","id","value","state","location","currentData","author","authorId","bookName","content","images","isbn","handleSubmit","bind","event","newData","newbookData","Object","keys","forEach","books","library","currentBooks","JSON","parse","stringify","updatedBooks","dispatch","type","payload","alert","preventDefault","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updateBook } from '../actions/libraryAction'\n\nclass UpdateBook extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id:  props.location.state.currentData.id,\n            author:  props.location.state.currentData.author,\n            authorId:  props.location.state.currentData.authorId,\n            bookName:  props.location.state.currentData.bookName,\n            content:  props.location.state.currentData.content,\n            images:  props.location.state.currentData.images,\n            isbn:  props.location.state.currentData.isbn,\n            \n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    change = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit(event) {\n        const newData = this.state;\n        const newbookData ={}\n        Object.keys(newData).forEach((keys) => {\n            if (newData[keys] !== '')\n            {\n                newbookData[keys] = newData[keys];\n            }\n\n        }) \n        const id = this.state.id;\n        const books = this.props.library.books;\n        const currentBooks =  JSON.parse(JSON.stringify(books));\n        const updatedBooks = updateBook(id, newbookData, currentBooks);\n        this.props.dispatch({type:'changeBooks', payload:updatedBooks});\n        alert('Successfully Updated');\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"container mt-4\" onSubmit={this.handleSubmit}>\n                    <input id=\"id\" placeholder=\"Enter bookid\" value={this.state.id} onChange={e => this.change(e)} />\n                    <br />\n                    <input id=\"author\" placeholder=\"Enter Author Name\" value={this.state.author} onChange={e => this.change(e)} />\n                    <br />\n                    <input id=\"authorId\" placeholder=\"Enter Author Id\" value={this.state.authorId} onChange={e => this.change(e)} />\n                    <br />\n                    <input id=\"content\" placeholder=\"Enter Content\" value={this.state.content} onChange={e => this.change(e)} />\n                    <br />\n                    <input id=\"bookName\" placeholder=\"Enter book Name\" value={this.state.bookName} onChange={e => this.change(e)} />\n                    <br />\n                    <input id=\"images\" placeholder=\"Enter image\" value={this.state.images} onChange={e => this.change(e)} />\n                    <br />\n                    <input id=\"isbn\" placeholder=\"Enter ISBN number\" value={this.state.isbn} onChange={e => this.change(e)} />\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        library: state.library,\n    };\n  }\n  \n  export default connect(mapStateToProps)(UpdateBook);"]},"metadata":{},"sourceType":"module"}