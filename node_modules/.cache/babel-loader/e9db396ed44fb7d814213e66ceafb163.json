{"ast":null,"code":"var _jsxFileName = \"/home/ethen/Desktop/09-neeraj-vashistha-redux-project/src/authors/UpdateAuthor.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateAuthor } from '../actions/libraryAction';\n\nclass UpdateAuthor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.change = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      authorId: props.location.state.currentData.authorId,\n      title: props.location.state.currentData.title,\n      authorImage: props.location.state.currentData.authorImage,\n      content: props.location.state.currentData.content\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const newData = this.state;\n    let newauthordata = {};\n    Object.keys(newData).forEach(keys => {\n      if (newData[keys] !== '') {\n        newauthordata[keys] = newData[keys];\n      }\n    });\n    const id = this.state.authorId;\n    updateAuthor(id, newauthordata);\n    const currentAuthor = JSON.parse(JSON.stringify(this.props.library.authors));\n    currentAuthor.forEach((author, index) => {\n      if (author.authorId === id) {\n        currentAuthor[index] = this.state;\n      }\n    });\n    this.props.dispatch({\n      type: 'changeAuthors',\n      payload: currentAuthor\n    });\n    alert('Successfully Updated');\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"container mt-4\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"authorId\",\n      placeholder: \"Enter Author Id\",\n      value: this.state.authorId,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"title\",\n      placeholder: \"Enter Author Name\",\n      value: this.state.title,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"authorImage\",\n      placeholder: \"Enter Author Image\",\n      value: this.state.authorImage,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"content\",\n      placeholder: \"Enter Content\",\n      value: this.state.content,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    library: state.library\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateAuthor);","map":{"version":3,"sources":["/home/ethen/Desktop/09-neeraj-vashistha-redux-project/src/authors/UpdateAuthor.js"],"names":["React","Component","connect","updateAuthor","UpdateAuthor","constructor","props","change","e","setState","target","id","value","state","authorId","location","currentData","title","authorImage","content","handleSubmit","bind","event","newData","newauthordata","Object","keys","forEach","currentAuthor","JSON","parse","stringify","library","authors","author","index","dispatch","type","payload","alert","preventDefault","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {updateAuthor} from '../actions/libraryAction'\nclass UpdateAuthor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          authorId: props.location.state.currentData.authorId,\n          title: props.location.state.currentData.title,\n          authorImage: props.location.state.currentData.authorImage,\n          content: props.location.state.currentData.content\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    \n      }\n      change = e => {\n        this.setState( {\n          [e.target.id]:e.target.value\n        })\n      }\n      handleSubmit(event) {\n        const newData = this.state;\n        let newauthordata = {}\n        Object.keys(newData).forEach((keys) => {\n          if (newData[keys] !=='') {\n            newauthordata[keys] = newData[keys];\n          }\n        })\n        const id = this.state.authorId;\n        updateAuthor(id, newauthordata);\n        const currentAuthor =  JSON.parse(JSON.stringify(this.props.library.authors));\n        currentAuthor.forEach((author, index) =>{\n          if (author.authorId === id) {\n            currentAuthor[index] = this.state ;\n          }\n        })\n        this.props.dispatch({type:'changeAuthors', payload:currentAuthor});\n        alert('Successfully Updated');\n        event.preventDefault();\n      }\n \n    render() {\n        return (\n            <form className=\"container mt-4\" onSubmit={this.handleSubmit}>\n                <input id=\"authorId\" placeholder=\"Enter Author Id\" value={this.state.authorId} onChange={e => this.change(e)} />\n                <br />\n                <input id=\"title\" placeholder=\"Enter Author Name\" value={this.state.title} onChange={e => this.change(e)} />\n                <br />\n                <input id=\"authorImage\" placeholder=\"Enter Author Image\" value={this.state.authorImage} onChange={e => this.change(e)} />\n                <br />\n                <input id=\"content\" placeholder=\"Enter Content\" value={this.state.content} onChange={e => this.change(e)} />\n                <br />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      library: state.library,\n  };\n}\n\nexport default connect(mapStateToProps)(UpdateAuthor);\n"]},"metadata":{},"sourceType":"module"}